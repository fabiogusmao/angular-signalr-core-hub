angular.module("SignalR",[]).factory("Hub",["$q","$log","$timeout",function(n,t,e){"use strict";var o=function(n,c){var r=this;var i=null;function a(n){var t={oldState:i,newState:n};return n!==i&&(i=n),t}function u(u){if(t.log("Hub "+n+' changed from "'+i+'" to "'+u+'"'),c.stateChanged){var s=a(u);c.stateChanged(s),f&&(f=!1),u===o.connectionStates.disconnected&&c.autoReconnect&&(s=a(o.connectionStates.reconnecting),c.stateChanged(s),e(function(){r.start()},c.reconnectTimeout||1e3))}}var s=null,d=[],f=!1;c.methods&&c.methods.map(function(e){var o=new function(e){return function(){t.debug(n,"Calling method "+e);var o=Array.prototype.slice.call(arguments);return o=[e].concat(o),s.send.apply(s,o)}}(e);r[e]=o}),this.start=function(){return null!==s&&0===s.connection.connectionState||((s=new signalR.HubConnection(function(){var e=c.rootPath+"/"+n,o=[];for(var r in c.queryParams)c.queryParams.hasOwnProperty(r)&&o.push(r+"="+c.queryParams[r]);return e+="?"+o.join("&"),t.debug("Hub",n,"url",e),e}())).onclose(function(e){t.log("Connection Closed",n),e&&t.error(e),u(o.connectionStates.disconnected)}),function(){if(c.listeners)for(var n in c.listeners)if(c.listeners.hasOwnProperty(n)){var t=c.listeners[n];s.on(n,t)}}(),d.map(function(n){s.on(n.method,n.handler)})),s.start().then(function(){u(o.connectionStates.connected)},function(n){if(t.error(n),!(n.statusCode>=500&&c.autoReconnect))throw n;e(function(){r.start()},c.reconnectTimeout||1e3)})},this.stop=function(){null!==s&&(f=!0,s.stop())},this.isConnected=function(){return s&&2===s.connection.connectionState},this.on=function(n,t){s&&s.on(n,t),d.push({method:n,handler:t})},this.off=function(n,t){s&&s.off(n,t);var e=d.findIndex(function(e){return e.method===n&&e.handler===t});e>=0&&d.splice(e,1)},c.autoStart&&this.start()};return o.connectionStates={connecting:"connecting",connected:"connected",reconnecting:"reconnecting",disconnected:"disconnected"},o}]);